// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

/* global window */
import * as gax from 'google-gax';
import {Callback, CallOptions, Descriptors, ClientOptions, LROperation, PaginationCallback, GaxCall} from 'google-gax';

import { Transform } from 'stream';
import { RequestType } from 'google-gax/build/src/apitypes';
import * as protos from '../../protos/protos';
import jsonProtos = require('../../protos/protos.json');
/**
 * Client JSON configuration object, loaded from
 * `src/v1alpha/os_config_zonal_service_client_config.json`.
 * This file defines retry strategy and timeouts for all API methods in this library.
 */
import * as gapicConfig from './os_config_zonal_service_client_config.json';
import { operationsProtos } from 'google-gax';
const version = require('../../../package.json').version;

/**
 *  Zonal OS Config API
 *
 *  The OS Config service is the server-side component that allows users to
 *  manage package installations and patch jobs for Compute Engine VM instances.
 * @class
 * @memberof v1alpha
 */
export class OsConfigZonalServiceClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  innerApiCalls: {[name: string]: Function};
  pathTemplates: {[name: string]: gax.PathTemplate};
  operationsClient: gax.OperationsClient;
  osConfigZonalServiceStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of OsConfigZonalServiceClient.
   *
   * @param {object} [options] - The configuration object.
   * The options accepted by the constructor are described in detail
   * in [this document](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#creating-the-client-instance).
   * The common options are:
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
   *     Follows the structure of {@link gapicConfig}.
   * @param {boolean} [options.fallback] - Use HTTP fallback mode.
   *     In fallback mode, a special browser-compatible transport implementation is used
   *     instead of gRPC transport. In browser context (if the `window` object is defined)
   *     the fallback mode is enabled automatically; set `options.fallback` to `false`
   *     if you need to override this behavior.
   */
  constructor(opts?: ClientOptions) {
    // Ensure that options include all the required fields.
    const staticMembers = this.constructor as typeof OsConfigZonalServiceClient;
    const servicePath = opts?.servicePath || opts?.apiEndpoint || staticMembers.servicePath;
    const port = opts?.port || staticMembers.port;
    const clientConfig = opts?.clientConfig ?? {};
    const fallback = opts?.fallback ?? (typeof window !== 'undefined' && typeof window?.fetch === 'function');
    opts = Object.assign({servicePath, port, clientConfig, fallback}, opts);

    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
    if (servicePath !== staticMembers.servicePath && !('scopes' in opts)) {
      opts['scopes'] = staticMembers.scopes;
    }

    // Choose either gRPC or proto-over-HTTP implementation of google-gax.
    this._gaxModule = opts.fallback ? gax.fallback : gax;

    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = (this._gaxGrpc.auth as gax.GoogleAuth);

    // Set the default scopes in auth client if needed.
    if (servicePath === staticMembers.servicePath) {
      this.auth.defaultScopes = staticMembers.scopes;
    }

    // Determine the client header string.
    const clientHeader = [
      `gax/${this._gaxModule.version}`,
      `gapic/${version}`,
    ];
    if (typeof process !== 'undefined' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    } else if (opts.fallback === 'rest' ) {
      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      instanceOSPoliciesCompliancePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/instanceOSPoliciesCompliances/{instance}'
      ),
      inventoryPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/instances/{instance}/inventory'
      ),
      oSPolicyAssignmentPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/osPolicyAssignments/{os_policy_assignment}'
      ),
      vulnerabilityReportPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/instances/{instance}/vulnerabilityReport'
      ),
    };

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this.descriptors.page = {
      listOSPolicyAssignments:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'osPolicyAssignments'),
      listOSPolicyAssignmentRevisions:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'osPolicyAssignments'),
      listInstanceOSPoliciesCompliances:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'instanceOsPoliciesCompliances'),
      listInventories:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'inventories'),
      listVulnerabilityReports:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'vulnerabilityReports')
    };

    const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);

    // This API contains "long-running operations", which return a
    // an Operation object that allows for tracking of the operation,
    // rather than holding a request open.

    this.operationsClient = this._gaxModule.lro({
      auth: this.auth,
      grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined
    }).operationsClient(opts);
    const createOSPolicyAssignmentResponse = protoFilesRoot.lookup(
      '.google.cloud.osconfig.v1alpha.OSPolicyAssignment') as gax.protobuf.Type;
    const createOSPolicyAssignmentMetadata = protoFilesRoot.lookup(
      '.google.cloud.osconfig.v1alpha.OSPolicyAssignmentOperationMetadata') as gax.protobuf.Type;
    const updateOSPolicyAssignmentResponse = protoFilesRoot.lookup(
      '.google.cloud.osconfig.v1alpha.OSPolicyAssignment') as gax.protobuf.Type;
    const updateOSPolicyAssignmentMetadata = protoFilesRoot.lookup(
      '.google.cloud.osconfig.v1alpha.OSPolicyAssignmentOperationMetadata') as gax.protobuf.Type;
    const deleteOSPolicyAssignmentResponse = protoFilesRoot.lookup(
      '.google.protobuf.Empty') as gax.protobuf.Type;
    const deleteOSPolicyAssignmentMetadata = protoFilesRoot.lookup(
      '.google.cloud.osconfig.v1alpha.OSPolicyAssignmentOperationMetadata') as gax.protobuf.Type;

    this.descriptors.longrunning = {
      createOSPolicyAssignment: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        createOSPolicyAssignmentResponse.decode.bind(createOSPolicyAssignmentResponse),
        createOSPolicyAssignmentMetadata.decode.bind(createOSPolicyAssignmentMetadata)),
      updateOSPolicyAssignment: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        updateOSPolicyAssignmentResponse.decode.bind(updateOSPolicyAssignmentResponse),
        updateOSPolicyAssignmentMetadata.decode.bind(updateOSPolicyAssignmentMetadata)),
      deleteOSPolicyAssignment: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        deleteOSPolicyAssignmentResponse.decode.bind(deleteOSPolicyAssignmentResponse),
        deleteOSPolicyAssignmentMetadata.decode.bind(deleteOSPolicyAssignmentMetadata))
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
        'google.cloud.osconfig.v1alpha.OsConfigZonalService', gapicConfig as gax.ClientConfig,
        opts.clientConfig || {}, {'x-goog-api-client': clientHeader.join(' ')});

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.osConfigZonalServiceStub) {
      return this.osConfigZonalServiceStub;
    }

    // Put together the "service stub" for
    // google.cloud.osconfig.v1alpha.OsConfigZonalService.
    this.osConfigZonalServiceStub = this._gaxGrpc.createStub(
        this._opts.fallback ?
          (this._protos as protobuf.Root).lookupService('google.cloud.osconfig.v1alpha.OsConfigZonalService') :
          // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.cloud.osconfig.v1alpha.OsConfigZonalService,
        this._opts) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const osConfigZonalServiceStubMethods =
        ['createOSPolicyAssignment', 'updateOSPolicyAssignment', 'getOSPolicyAssignment', 'listOSPolicyAssignments', 'listOSPolicyAssignmentRevisions', 'deleteOSPolicyAssignment', 'getInstanceOSPoliciesCompliance', 'listInstanceOSPoliciesCompliances', 'getInventory', 'listInventories', 'getVulnerabilityReport', 'listVulnerabilityReports'];
    for (const methodName of osConfigZonalServiceStubMethods) {
      const callPromise = this.osConfigZonalServiceStub.then(
        stub => (...args: Array<{}>) => {
          if (this._terminated) {
            return Promise.reject('The client has already been closed.');
          }
          const func = stub[methodName];
          return func.apply(stub, args);
        },
        (err: Error|null|undefined) => () => {
          throw err;
        });

      const descriptor =
        this.descriptors.page[methodName] ||
        this.descriptors.longrunning[methodName] ||
        undefined;
      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        descriptor
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.osConfigZonalServiceStub;
  }

  /**
   * The DNS address for this API service.
   * @returns {string} The DNS address for this service.
   */
  static get servicePath() {
    return 'osconfig.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath(),
   * exists for compatibility reasons.
   * @returns {string} The DNS address for this service.
   */
  static get apiEndpoint() {
    return 'osconfig.googleapis.com';
  }

  /**
   * The port for this API service.
   * @returns {number} The default port for this service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   * @returns {string[]} List of default scopes.
   */
  static get scopes() {
    return [
      'https://www.googleapis.com/auth/cloud-platform'
    ];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @returns {Promise} A promise that resolves to string containing the project ID.
   */
  getProjectId(callback?: Callback<string, undefined, undefined>):
      Promise<string>|void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
  getOSPolicyAssignment(
      request: protos.google.cloud.osconfig.v1alpha.IGetOSPolicyAssignmentRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment,
        protos.google.cloud.osconfig.v1alpha.IGetOSPolicyAssignmentRequest|undefined, {}|undefined
      ]>;
  getOSPolicyAssignment(
      request: protos.google.cloud.osconfig.v1alpha.IGetOSPolicyAssignmentRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment,
          protos.google.cloud.osconfig.v1alpha.IGetOSPolicyAssignmentRequest|null|undefined,
          {}|null|undefined>): void;
  getOSPolicyAssignment(
      request: protos.google.cloud.osconfig.v1alpha.IGetOSPolicyAssignmentRequest,
      callback: Callback<
          protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment,
          protos.google.cloud.osconfig.v1alpha.IGetOSPolicyAssignmentRequest|null|undefined,
          {}|null|undefined>): void;
/**
 * Retrieve an existing OS policy assignment.
 *
 * This method always returns the latest revision. In order to retrieve a
 * previous revision of the assignment, also provide the revision ID in the
 * `name` parameter.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The resource name of OS policy assignment.
 *
 *   Format:
 *   `projects/{project}/locations/{location}/osPolicyAssignments/{os_policy_assignment}@{revisionId}`
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [OSPolicyAssignment]{@link google.cloud.osconfig.v1alpha.OSPolicyAssignment}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example
 * const [response] = await client.getOSPolicyAssignment(request);
 */
  getOSPolicyAssignment(
      request: protos.google.cloud.osconfig.v1alpha.IGetOSPolicyAssignmentRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment,
          protos.google.cloud.osconfig.v1alpha.IGetOSPolicyAssignmentRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment,
          protos.google.cloud.osconfig.v1alpha.IGetOSPolicyAssignmentRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment,
        protos.google.cloud.osconfig.v1alpha.IGetOSPolicyAssignmentRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'name': request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.getOSPolicyAssignment(request, options, callback);
  }
  getInstanceOSPoliciesCompliance(
      request: protos.google.cloud.osconfig.v1alpha.IGetInstanceOSPoliciesComplianceRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.osconfig.v1alpha.IInstanceOSPoliciesCompliance,
        protos.google.cloud.osconfig.v1alpha.IGetInstanceOSPoliciesComplianceRequest|undefined, {}|undefined
      ]>;
  getInstanceOSPoliciesCompliance(
      request: protos.google.cloud.osconfig.v1alpha.IGetInstanceOSPoliciesComplianceRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.osconfig.v1alpha.IInstanceOSPoliciesCompliance,
          protos.google.cloud.osconfig.v1alpha.IGetInstanceOSPoliciesComplianceRequest|null|undefined,
          {}|null|undefined>): void;
  getInstanceOSPoliciesCompliance(
      request: protos.google.cloud.osconfig.v1alpha.IGetInstanceOSPoliciesComplianceRequest,
      callback: Callback<
          protos.google.cloud.osconfig.v1alpha.IInstanceOSPoliciesCompliance,
          protos.google.cloud.osconfig.v1alpha.IGetInstanceOSPoliciesComplianceRequest|null|undefined,
          {}|null|undefined>): void;
/**
 * Get OS policies compliance data for the specified Compute Engine VM
 * instance.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. API resource name for instance OS policies compliance resource.
 *
 *   Format:
 *   `projects/{project}/locations/{location}/instanceOSPoliciesCompliances/{instance}`
 *
 *   For `{project}`, either Compute Engine project-number or project-id can be
 *   provided.
 *   For `{instance}`, either Compute Engine VM instance-id or instance-name can
 *   be provided.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [InstanceOSPoliciesCompliance]{@link google.cloud.osconfig.v1alpha.InstanceOSPoliciesCompliance}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example
 * const [response] = await client.getInstanceOSPoliciesCompliance(request);
 */
  getInstanceOSPoliciesCompliance(
      request: protos.google.cloud.osconfig.v1alpha.IGetInstanceOSPoliciesComplianceRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.osconfig.v1alpha.IInstanceOSPoliciesCompliance,
          protos.google.cloud.osconfig.v1alpha.IGetInstanceOSPoliciesComplianceRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.osconfig.v1alpha.IInstanceOSPoliciesCompliance,
          protos.google.cloud.osconfig.v1alpha.IGetInstanceOSPoliciesComplianceRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.osconfig.v1alpha.IInstanceOSPoliciesCompliance,
        protos.google.cloud.osconfig.v1alpha.IGetInstanceOSPoliciesComplianceRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'name': request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.getInstanceOSPoliciesCompliance(request, options, callback);
  }
  getInventory(
      request: protos.google.cloud.osconfig.v1alpha.IGetInventoryRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.osconfig.v1alpha.IInventory,
        protos.google.cloud.osconfig.v1alpha.IGetInventoryRequest|undefined, {}|undefined
      ]>;
  getInventory(
      request: protos.google.cloud.osconfig.v1alpha.IGetInventoryRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.osconfig.v1alpha.IInventory,
          protos.google.cloud.osconfig.v1alpha.IGetInventoryRequest|null|undefined,
          {}|null|undefined>): void;
  getInventory(
      request: protos.google.cloud.osconfig.v1alpha.IGetInventoryRequest,
      callback: Callback<
          protos.google.cloud.osconfig.v1alpha.IInventory,
          protos.google.cloud.osconfig.v1alpha.IGetInventoryRequest|null|undefined,
          {}|null|undefined>): void;
/**
 * Get inventory data for the specified VM instance. If the VM has no
 * associated inventory, the message `NOT_FOUND` is returned.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. API resource name for inventory resource.
 *
 *   Format:
 *   `projects/{project}/locations/{location}/instances/{instance}/inventory`
 *
 *   For `{project}`, either `project-number` or `project-id` can be provided.
 *   For `{instance}`, either Compute Engine  `instance-id` or `instance-name`
 *   can be provided.
 * @param {google.cloud.osconfig.v1alpha.InventoryView} request.view
 *   Inventory view indicating what information should be included in the
 *   inventory resource. If unspecified, the default view is BASIC.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [Inventory]{@link google.cloud.osconfig.v1alpha.Inventory}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example
 * const [response] = await client.getInventory(request);
 */
  getInventory(
      request: protos.google.cloud.osconfig.v1alpha.IGetInventoryRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.osconfig.v1alpha.IInventory,
          protos.google.cloud.osconfig.v1alpha.IGetInventoryRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.osconfig.v1alpha.IInventory,
          protos.google.cloud.osconfig.v1alpha.IGetInventoryRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.osconfig.v1alpha.IInventory,
        protos.google.cloud.osconfig.v1alpha.IGetInventoryRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'name': request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.getInventory(request, options, callback);
  }
  getVulnerabilityReport(
      request: protos.google.cloud.osconfig.v1alpha.IGetVulnerabilityReportRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.osconfig.v1alpha.IVulnerabilityReport,
        protos.google.cloud.osconfig.v1alpha.IGetVulnerabilityReportRequest|undefined, {}|undefined
      ]>;
  getVulnerabilityReport(
      request: protos.google.cloud.osconfig.v1alpha.IGetVulnerabilityReportRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.osconfig.v1alpha.IVulnerabilityReport,
          protos.google.cloud.osconfig.v1alpha.IGetVulnerabilityReportRequest|null|undefined,
          {}|null|undefined>): void;
  getVulnerabilityReport(
      request: protos.google.cloud.osconfig.v1alpha.IGetVulnerabilityReportRequest,
      callback: Callback<
          protos.google.cloud.osconfig.v1alpha.IVulnerabilityReport,
          protos.google.cloud.osconfig.v1alpha.IGetVulnerabilityReportRequest|null|undefined,
          {}|null|undefined>): void;
/**
 * Gets the vulnerability report for the specified VM instance. Only VMs with
 * inventory data have vulnerability reports associated with them.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. API resource name for vulnerability resource.
 *
 *   Format:
 *   `projects/{project}/locations/{location}/instances/{instance}/vulnerabilityReport`
 *
 *   For `{project}`, either `project-number` or `project-id` can be provided.
 *   For `{instance}`, either Compute Engine `instance-id` or `instance-name`
 *   can be provided.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [VulnerabilityReport]{@link google.cloud.osconfig.v1alpha.VulnerabilityReport}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example
 * const [response] = await client.getVulnerabilityReport(request);
 */
  getVulnerabilityReport(
      request: protos.google.cloud.osconfig.v1alpha.IGetVulnerabilityReportRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.osconfig.v1alpha.IVulnerabilityReport,
          protos.google.cloud.osconfig.v1alpha.IGetVulnerabilityReportRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.osconfig.v1alpha.IVulnerabilityReport,
          protos.google.cloud.osconfig.v1alpha.IGetVulnerabilityReportRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.osconfig.v1alpha.IVulnerabilityReport,
        protos.google.cloud.osconfig.v1alpha.IGetVulnerabilityReportRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'name': request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.getVulnerabilityReport(request, options, callback);
  }

  createOSPolicyAssignment(
      request: protos.google.cloud.osconfig.v1alpha.ICreateOSPolicyAssignmentRequest,
      options?: CallOptions):
      Promise<[
        LROperation<protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment, protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignmentOperationMetadata>,
        protos.google.longrunning.IOperation|undefined, {}|undefined
      ]>;
  createOSPolicyAssignment(
      request: protos.google.cloud.osconfig.v1alpha.ICreateOSPolicyAssignmentRequest,
      options: CallOptions,
      callback: Callback<
          LROperation<protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment, protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignmentOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>): void;
  createOSPolicyAssignment(
      request: protos.google.cloud.osconfig.v1alpha.ICreateOSPolicyAssignmentRequest,
      callback: Callback<
          LROperation<protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment, protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignmentOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>): void;
/**
 * Create an OS policy assignment.
 *
 * This method also creates the first revision of the OS policy assignment.
 *
 * This method returns a long running operation (LRO) that contains the
 * rollout details. The rollout can be cancelled by cancelling the LRO.
 *
 * For more information, see [Method:
 * projects.locations.osPolicyAssignments.operations.cancel](https://cloud.google.com/compute/docs/osconfig/rest/v1alpha/projects.locations.osPolicyAssignments.operations/cancel).
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource name in the form:
 *   projects/{project}/locations/{location}
 * @param {google.cloud.osconfig.v1alpha.OSPolicyAssignment} request.osPolicyAssignment
 *   Required. The OS policy assignment to be created.
 * @param {string} request.osPolicyAssignmentId
 *   Required. The logical name of the OS policy assignment in the project
 *   with the following restrictions:
 *
 *   * Must contain only lowercase letters, numbers, and hyphens.
 *   * Must start with a letter.
 *   * Must be between 1-63 characters.
 *   * Must end with a number or a letter.
 *   * Must be unique within the project.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing
 *   a long running operation. Its `promise()` method returns a promise
 *   you can `await` for.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
 *   for more details and examples.
 * @example
 * const [operation] = await client.createOSPolicyAssignment(request);
 * const [response] = await operation.promise();
 */
  createOSPolicyAssignment(
      request: protos.google.cloud.osconfig.v1alpha.ICreateOSPolicyAssignmentRequest,
      optionsOrCallback?: CallOptions|Callback<
          LROperation<protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment, protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignmentOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          LROperation<protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment, protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignmentOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>):
      Promise<[
        LROperation<protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment, protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignmentOperationMetadata>,
        protos.google.longrunning.IOperation|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.createOSPolicyAssignment(request, options, callback);
  }
/**
 * Check the status of the long running operation returned by `createOSPolicyAssignment()`.
 * @param {String} name
 *   The operation name that will be passed.
 * @returns {Promise} - The promise which resolves to an object.
 *   The decoded operation object has result and metadata field to get information from.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
 *   for more details and examples.
 * @example
 * const decodedOperation = await checkCreateOSPolicyAssignmentProgress(name);
 * console.log(decodedOperation.result);
 * console.log(decodedOperation.done);
 * console.log(decodedOperation.metadata);
 */
  async checkCreateOSPolicyAssignmentProgress(name: string): Promise<LROperation<protos.google.cloud.osconfig.v1alpha.OSPolicyAssignment, protos.google.cloud.osconfig.v1alpha.OSPolicyAssignmentOperationMetadata>>{
    const request = new operationsProtos.google.longrunning.GetOperationRequest({name});
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new gax.Operation(operation, this.descriptors.longrunning.createOSPolicyAssignment, gax.createDefaultBackoffSettings());
    return decodeOperation as LROperation<protos.google.cloud.osconfig.v1alpha.OSPolicyAssignment, protos.google.cloud.osconfig.v1alpha.OSPolicyAssignmentOperationMetadata>;
  }
  updateOSPolicyAssignment(
      request: protos.google.cloud.osconfig.v1alpha.IUpdateOSPolicyAssignmentRequest,
      options?: CallOptions):
      Promise<[
        LROperation<protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment, protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignmentOperationMetadata>,
        protos.google.longrunning.IOperation|undefined, {}|undefined
      ]>;
  updateOSPolicyAssignment(
      request: protos.google.cloud.osconfig.v1alpha.IUpdateOSPolicyAssignmentRequest,
      options: CallOptions,
      callback: Callback<
          LROperation<protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment, protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignmentOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>): void;
  updateOSPolicyAssignment(
      request: protos.google.cloud.osconfig.v1alpha.IUpdateOSPolicyAssignmentRequest,
      callback: Callback<
          LROperation<protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment, protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignmentOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>): void;
/**
 * Update an existing OS policy assignment.
 *
 * This method creates a new revision of the OS policy assignment.
 *
 * This method returns a long running operation (LRO) that contains the
 * rollout details. The rollout can be cancelled by cancelling the LRO.
 *
 * For more information, see [Method:
 * projects.locations.osPolicyAssignments.operations.cancel](https://cloud.google.com/compute/docs/osconfig/rest/v1alpha/projects.locations.osPolicyAssignments.operations/cancel).
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {google.cloud.osconfig.v1alpha.OSPolicyAssignment} request.osPolicyAssignment
 *   Required. The updated OS policy assignment.
 * @param {google.protobuf.FieldMask} [request.updateMask]
 *   Optional. Field mask that controls which fields of the assignment should be updated.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing
 *   a long running operation. Its `promise()` method returns a promise
 *   you can `await` for.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
 *   for more details and examples.
 * @example
 * const [operation] = await client.updateOSPolicyAssignment(request);
 * const [response] = await operation.promise();
 */
  updateOSPolicyAssignment(
      request: protos.google.cloud.osconfig.v1alpha.IUpdateOSPolicyAssignmentRequest,
      optionsOrCallback?: CallOptions|Callback<
          LROperation<protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment, protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignmentOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          LROperation<protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment, protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignmentOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>):
      Promise<[
        LROperation<protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment, protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignmentOperationMetadata>,
        protos.google.longrunning.IOperation|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'os_policy_assignment.name': request.osPolicyAssignment!.name || '',
    });
    this.initialize();
    return this.innerApiCalls.updateOSPolicyAssignment(request, options, callback);
  }
/**
 * Check the status of the long running operation returned by `updateOSPolicyAssignment()`.
 * @param {String} name
 *   The operation name that will be passed.
 * @returns {Promise} - The promise which resolves to an object.
 *   The decoded operation object has result and metadata field to get information from.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
 *   for more details and examples.
 * @example
 * const decodedOperation = await checkUpdateOSPolicyAssignmentProgress(name);
 * console.log(decodedOperation.result);
 * console.log(decodedOperation.done);
 * console.log(decodedOperation.metadata);
 */
  async checkUpdateOSPolicyAssignmentProgress(name: string): Promise<LROperation<protos.google.cloud.osconfig.v1alpha.OSPolicyAssignment, protos.google.cloud.osconfig.v1alpha.OSPolicyAssignmentOperationMetadata>>{
    const request = new operationsProtos.google.longrunning.GetOperationRequest({name});
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new gax.Operation(operation, this.descriptors.longrunning.updateOSPolicyAssignment, gax.createDefaultBackoffSettings());
    return decodeOperation as LROperation<protos.google.cloud.osconfig.v1alpha.OSPolicyAssignment, protos.google.cloud.osconfig.v1alpha.OSPolicyAssignmentOperationMetadata>;
  }
  deleteOSPolicyAssignment(
      request: protos.google.cloud.osconfig.v1alpha.IDeleteOSPolicyAssignmentRequest,
      options?: CallOptions):
      Promise<[
        LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignmentOperationMetadata>,
        protos.google.longrunning.IOperation|undefined, {}|undefined
      ]>;
  deleteOSPolicyAssignment(
      request: protos.google.cloud.osconfig.v1alpha.IDeleteOSPolicyAssignmentRequest,
      options: CallOptions,
      callback: Callback<
          LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignmentOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>): void;
  deleteOSPolicyAssignment(
      request: protos.google.cloud.osconfig.v1alpha.IDeleteOSPolicyAssignmentRequest,
      callback: Callback<
          LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignmentOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>): void;
/**
 * Delete the OS policy assignment.
 *
 * This method creates a new revision of the OS policy assignment.
 *
 * This method returns a long running operation (LRO) that contains the
 * rollout details. The rollout can be cancelled by cancelling the LRO.
 *
 * If the LRO completes and is not cancelled, all revisions associated with
 * the OS policy assignment are deleted.
 *
 * For more information, see [Method:
 * projects.locations.osPolicyAssignments.operations.cancel](https://cloud.google.com/compute/docs/osconfig/rest/v1alpha/projects.locations.osPolicyAssignments.operations/cancel).
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the OS policy assignment to be deleted
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing
 *   a long running operation. Its `promise()` method returns a promise
 *   you can `await` for.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
 *   for more details and examples.
 * @example
 * const [operation] = await client.deleteOSPolicyAssignment(request);
 * const [response] = await operation.promise();
 */
  deleteOSPolicyAssignment(
      request: protos.google.cloud.osconfig.v1alpha.IDeleteOSPolicyAssignmentRequest,
      optionsOrCallback?: CallOptions|Callback<
          LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignmentOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignmentOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>):
      Promise<[
        LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignmentOperationMetadata>,
        protos.google.longrunning.IOperation|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'name': request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.deleteOSPolicyAssignment(request, options, callback);
  }
/**
 * Check the status of the long running operation returned by `deleteOSPolicyAssignment()`.
 * @param {String} name
 *   The operation name that will be passed.
 * @returns {Promise} - The promise which resolves to an object.
 *   The decoded operation object has result and metadata field to get information from.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
 *   for more details and examples.
 * @example
 * const decodedOperation = await checkDeleteOSPolicyAssignmentProgress(name);
 * console.log(decodedOperation.result);
 * console.log(decodedOperation.done);
 * console.log(decodedOperation.metadata);
 */
  async checkDeleteOSPolicyAssignmentProgress(name: string): Promise<LROperation<protos.google.protobuf.Empty, protos.google.cloud.osconfig.v1alpha.OSPolicyAssignmentOperationMetadata>>{
    const request = new operationsProtos.google.longrunning.GetOperationRequest({name});
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new gax.Operation(operation, this.descriptors.longrunning.deleteOSPolicyAssignment, gax.createDefaultBackoffSettings());
    return decodeOperation as LROperation<protos.google.protobuf.Empty, protos.google.cloud.osconfig.v1alpha.OSPolicyAssignmentOperationMetadata>;
  }
  listOSPolicyAssignments(
      request: protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment[],
        protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentsRequest|null,
        protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentsResponse
      ]>;
  listOSPolicyAssignments(
      request: protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentsRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentsRequest,
          protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentsResponse|null|undefined,
          protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment>): void;
  listOSPolicyAssignments(
      request: protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentsRequest,
      callback: PaginationCallback<
          protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentsRequest,
          protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentsResponse|null|undefined,
          protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment>): void;
/**
 * List the OS policy assignments under the parent resource.
 *
 * For each OS policy assignment, the latest revision is returned.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource name.
 * @param {number} request.pageSize
 *   The maximum number of assignments to return.
 * @param {string} request.pageToken
 *   A pagination token returned from a previous call to
 *   `ListOSPolicyAssignments` that indicates where this listing should continue
 *   from.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of [OSPolicyAssignment]{@link google.cloud.osconfig.v1alpha.OSPolicyAssignment}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listOSPolicyAssignmentsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listOSPolicyAssignments(
      request: protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentsRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentsRequest,
          protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentsResponse|null|undefined,
          protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment>,
      callback?: PaginationCallback<
          protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentsRequest,
          protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentsResponse|null|undefined,
          protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment>):
      Promise<[
        protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment[],
        protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentsRequest|null,
        protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentsResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.listOSPolicyAssignments(request, options, callback);
  }

/**
 * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource name.
 * @param {number} request.pageSize
 *   The maximum number of assignments to return.
 * @param {string} request.pageToken
 *   A pagination token returned from a previous call to
 *   `ListOSPolicyAssignments` that indicates where this listing should continue
 *   from.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing [OSPolicyAssignment]{@link google.cloud.osconfig.v1alpha.OSPolicyAssignment} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listOSPolicyAssignmentsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listOSPolicyAssignmentsStream(
      request?: protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentsRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listOSPolicyAssignments.createStream(
      this.innerApiCalls.listOSPolicyAssignments as gax.GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listOSPolicyAssignments`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource name.
 * @param {number} request.pageSize
 *   The maximum number of assignments to return.
 * @param {string} request.pageToken
 *   A pagination token returned from a previous call to
 *   `ListOSPolicyAssignments` that indicates where this listing should continue
 *   from.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
 *   When you iterate the returned iterable, each element will be an object representing
 *   [OSPolicyAssignment]{@link google.cloud.osconfig.v1alpha.OSPolicyAssignment}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 * @example
 * const iterable = client.listOSPolicyAssignmentsAsync(request);
 * for await (const response of iterable) {
 *   // process response
 * }
 */
  listOSPolicyAssignmentsAsync(
      request?: protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentsRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    options = options || {};
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listOSPolicyAssignments.asyncIterate(
      this.innerApiCalls['listOSPolicyAssignments'] as GaxCall,
      request as unknown as RequestType,
      callSettings
    ) as AsyncIterable<protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment>;
  }
  listOSPolicyAssignmentRevisions(
      request: protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentRevisionsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment[],
        protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentRevisionsRequest|null,
        protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentRevisionsResponse
      ]>;
  listOSPolicyAssignmentRevisions(
      request: protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentRevisionsRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentRevisionsRequest,
          protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentRevisionsResponse|null|undefined,
          protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment>): void;
  listOSPolicyAssignmentRevisions(
      request: protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentRevisionsRequest,
      callback: PaginationCallback<
          protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentRevisionsRequest,
          protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentRevisionsResponse|null|undefined,
          protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment>): void;
/**
 * List the OS policy assignment revisions for a given OS policy assignment.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the OS policy assignment to list revisions for.
 * @param {number} request.pageSize
 *   The maximum number of revisions to return.
 * @param {string} request.pageToken
 *   A pagination token returned from a previous call to
 *   `ListOSPolicyAssignmentRevisions` that indicates where this listing should
 *   continue from.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of [OSPolicyAssignment]{@link google.cloud.osconfig.v1alpha.OSPolicyAssignment}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listOSPolicyAssignmentRevisionsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listOSPolicyAssignmentRevisions(
      request: protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentRevisionsRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentRevisionsRequest,
          protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentRevisionsResponse|null|undefined,
          protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment>,
      callback?: PaginationCallback<
          protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentRevisionsRequest,
          protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentRevisionsResponse|null|undefined,
          protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment>):
      Promise<[
        protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment[],
        protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentRevisionsRequest|null,
        protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentRevisionsResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'name': request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.listOSPolicyAssignmentRevisions(request, options, callback);
  }

/**
 * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the OS policy assignment to list revisions for.
 * @param {number} request.pageSize
 *   The maximum number of revisions to return.
 * @param {string} request.pageToken
 *   A pagination token returned from a previous call to
 *   `ListOSPolicyAssignmentRevisions` that indicates where this listing should
 *   continue from.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing [OSPolicyAssignment]{@link google.cloud.osconfig.v1alpha.OSPolicyAssignment} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listOSPolicyAssignmentRevisionsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listOSPolicyAssignmentRevisionsStream(
      request?: protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentRevisionsRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'name': request.name || '',
    });
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listOSPolicyAssignmentRevisions.createStream(
      this.innerApiCalls.listOSPolicyAssignmentRevisions as gax.GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listOSPolicyAssignmentRevisions`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the OS policy assignment to list revisions for.
 * @param {number} request.pageSize
 *   The maximum number of revisions to return.
 * @param {string} request.pageToken
 *   A pagination token returned from a previous call to
 *   `ListOSPolicyAssignmentRevisions` that indicates where this listing should
 *   continue from.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
 *   When you iterate the returned iterable, each element will be an object representing
 *   [OSPolicyAssignment]{@link google.cloud.osconfig.v1alpha.OSPolicyAssignment}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 * @example
 * const iterable = client.listOSPolicyAssignmentRevisionsAsync(request);
 * for await (const response of iterable) {
 *   // process response
 * }
 */
  listOSPolicyAssignmentRevisionsAsync(
      request?: protos.google.cloud.osconfig.v1alpha.IListOSPolicyAssignmentRevisionsRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'name': request.name || '',
    });
    options = options || {};
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listOSPolicyAssignmentRevisions.asyncIterate(
      this.innerApiCalls['listOSPolicyAssignmentRevisions'] as GaxCall,
      request as unknown as RequestType,
      callSettings
    ) as AsyncIterable<protos.google.cloud.osconfig.v1alpha.IOSPolicyAssignment>;
  }
  listInstanceOSPoliciesCompliances(
      request: protos.google.cloud.osconfig.v1alpha.IListInstanceOSPoliciesCompliancesRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.osconfig.v1alpha.IInstanceOSPoliciesCompliance[],
        protos.google.cloud.osconfig.v1alpha.IListInstanceOSPoliciesCompliancesRequest|null,
        protos.google.cloud.osconfig.v1alpha.IListInstanceOSPoliciesCompliancesResponse
      ]>;
  listInstanceOSPoliciesCompliances(
      request: protos.google.cloud.osconfig.v1alpha.IListInstanceOSPoliciesCompliancesRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.osconfig.v1alpha.IListInstanceOSPoliciesCompliancesRequest,
          protos.google.cloud.osconfig.v1alpha.IListInstanceOSPoliciesCompliancesResponse|null|undefined,
          protos.google.cloud.osconfig.v1alpha.IInstanceOSPoliciesCompliance>): void;
  listInstanceOSPoliciesCompliances(
      request: protos.google.cloud.osconfig.v1alpha.IListInstanceOSPoliciesCompliancesRequest,
      callback: PaginationCallback<
          protos.google.cloud.osconfig.v1alpha.IListInstanceOSPoliciesCompliancesRequest,
          protos.google.cloud.osconfig.v1alpha.IListInstanceOSPoliciesCompliancesResponse|null|undefined,
          protos.google.cloud.osconfig.v1alpha.IInstanceOSPoliciesCompliance>): void;
/**
 * List OS policies compliance data for all Compute Engine VM instances in the
 * specified zone.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource name.
 *
 *   Format: `projects/{project}/locations/{location}`
 *
 *   For `{project}`, either Compute Engine project-number or project-id can be
 *   provided.
 * @param {number} request.pageSize
 *   The maximum number of results to return.
 * @param {string} request.pageToken
 *   A pagination token returned from a previous call to
 *   `ListInstanceOSPoliciesCompliances` that indicates where this listing
 *   should continue from.
 * @param {string} request.filter
 *   If provided, this field specifies the criteria that must be met by a
 *   `InstanceOSPoliciesCompliance` API resource to be included in the response.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of [InstanceOSPoliciesCompliance]{@link google.cloud.osconfig.v1alpha.InstanceOSPoliciesCompliance}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listInstanceOSPoliciesCompliancesAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listInstanceOSPoliciesCompliances(
      request: protos.google.cloud.osconfig.v1alpha.IListInstanceOSPoliciesCompliancesRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.osconfig.v1alpha.IListInstanceOSPoliciesCompliancesRequest,
          protos.google.cloud.osconfig.v1alpha.IListInstanceOSPoliciesCompliancesResponse|null|undefined,
          protos.google.cloud.osconfig.v1alpha.IInstanceOSPoliciesCompliance>,
      callback?: PaginationCallback<
          protos.google.cloud.osconfig.v1alpha.IListInstanceOSPoliciesCompliancesRequest,
          protos.google.cloud.osconfig.v1alpha.IListInstanceOSPoliciesCompliancesResponse|null|undefined,
          protos.google.cloud.osconfig.v1alpha.IInstanceOSPoliciesCompliance>):
      Promise<[
        protos.google.cloud.osconfig.v1alpha.IInstanceOSPoliciesCompliance[],
        protos.google.cloud.osconfig.v1alpha.IListInstanceOSPoliciesCompliancesRequest|null,
        protos.google.cloud.osconfig.v1alpha.IListInstanceOSPoliciesCompliancesResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.listInstanceOSPoliciesCompliances(request, options, callback);
  }

/**
 * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource name.
 *
 *   Format: `projects/{project}/locations/{location}`
 *
 *   For `{project}`, either Compute Engine project-number or project-id can be
 *   provided.
 * @param {number} request.pageSize
 *   The maximum number of results to return.
 * @param {string} request.pageToken
 *   A pagination token returned from a previous call to
 *   `ListInstanceOSPoliciesCompliances` that indicates where this listing
 *   should continue from.
 * @param {string} request.filter
 *   If provided, this field specifies the criteria that must be met by a
 *   `InstanceOSPoliciesCompliance` API resource to be included in the response.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing [InstanceOSPoliciesCompliance]{@link google.cloud.osconfig.v1alpha.InstanceOSPoliciesCompliance} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listInstanceOSPoliciesCompliancesAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listInstanceOSPoliciesCompliancesStream(
      request?: protos.google.cloud.osconfig.v1alpha.IListInstanceOSPoliciesCompliancesRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listInstanceOSPoliciesCompliances.createStream(
      this.innerApiCalls.listInstanceOSPoliciesCompliances as gax.GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listInstanceOSPoliciesCompliances`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource name.
 *
 *   Format: `projects/{project}/locations/{location}`
 *
 *   For `{project}`, either Compute Engine project-number or project-id can be
 *   provided.
 * @param {number} request.pageSize
 *   The maximum number of results to return.
 * @param {string} request.pageToken
 *   A pagination token returned from a previous call to
 *   `ListInstanceOSPoliciesCompliances` that indicates where this listing
 *   should continue from.
 * @param {string} request.filter
 *   If provided, this field specifies the criteria that must be met by a
 *   `InstanceOSPoliciesCompliance` API resource to be included in the response.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
 *   When you iterate the returned iterable, each element will be an object representing
 *   [InstanceOSPoliciesCompliance]{@link google.cloud.osconfig.v1alpha.InstanceOSPoliciesCompliance}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 * @example
 * const iterable = client.listInstanceOSPoliciesCompliancesAsync(request);
 * for await (const response of iterable) {
 *   // process response
 * }
 */
  listInstanceOSPoliciesCompliancesAsync(
      request?: protos.google.cloud.osconfig.v1alpha.IListInstanceOSPoliciesCompliancesRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.osconfig.v1alpha.IInstanceOSPoliciesCompliance>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    options = options || {};
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listInstanceOSPoliciesCompliances.asyncIterate(
      this.innerApiCalls['listInstanceOSPoliciesCompliances'] as GaxCall,
      request as unknown as RequestType,
      callSettings
    ) as AsyncIterable<protos.google.cloud.osconfig.v1alpha.IInstanceOSPoliciesCompliance>;
  }
  listInventories(
      request: protos.google.cloud.osconfig.v1alpha.IListInventoriesRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.osconfig.v1alpha.IInventory[],
        protos.google.cloud.osconfig.v1alpha.IListInventoriesRequest|null,
        protos.google.cloud.osconfig.v1alpha.IListInventoriesResponse
      ]>;
  listInventories(
      request: protos.google.cloud.osconfig.v1alpha.IListInventoriesRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.osconfig.v1alpha.IListInventoriesRequest,
          protos.google.cloud.osconfig.v1alpha.IListInventoriesResponse|null|undefined,
          protos.google.cloud.osconfig.v1alpha.IInventory>): void;
  listInventories(
      request: protos.google.cloud.osconfig.v1alpha.IListInventoriesRequest,
      callback: PaginationCallback<
          protos.google.cloud.osconfig.v1alpha.IListInventoriesRequest,
          protos.google.cloud.osconfig.v1alpha.IListInventoriesResponse|null|undefined,
          protos.google.cloud.osconfig.v1alpha.IInventory>): void;
/**
 * List inventory data for all VM instances in the specified zone.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource name.
 *
 *   Format: `projects/{project}/locations/{location}/instances/{instance}`
 *
 *   For `{project}`, either `project-number` or `project-id` can be
 *   provided. For `{instance}`, only hyphen or dash character is supported to
 *   list inventories across VMs.
 * @param {google.cloud.osconfig.v1alpha.InventoryView} request.view
 *   Inventory view indicating what information should be included in the
 *   inventory resource. If unspecified, the default view is BASIC.
 * @param {number} request.pageSize
 *   The maximum number of results to return.
 * @param {string} request.pageToken
 *   A pagination token returned from a previous call to
 *   `ListInventories` that indicates where this listing
 *   should continue from.
 * @param {string} request.filter
 *   If provided, this field specifies the criteria that must be met by a
 *   `Inventory` API resource to be included in the response.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of [Inventory]{@link google.cloud.osconfig.v1alpha.Inventory}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listInventoriesAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listInventories(
      request: protos.google.cloud.osconfig.v1alpha.IListInventoriesRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.osconfig.v1alpha.IListInventoriesRequest,
          protos.google.cloud.osconfig.v1alpha.IListInventoriesResponse|null|undefined,
          protos.google.cloud.osconfig.v1alpha.IInventory>,
      callback?: PaginationCallback<
          protos.google.cloud.osconfig.v1alpha.IListInventoriesRequest,
          protos.google.cloud.osconfig.v1alpha.IListInventoriesResponse|null|undefined,
          protos.google.cloud.osconfig.v1alpha.IInventory>):
      Promise<[
        protos.google.cloud.osconfig.v1alpha.IInventory[],
        protos.google.cloud.osconfig.v1alpha.IListInventoriesRequest|null,
        protos.google.cloud.osconfig.v1alpha.IListInventoriesResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.listInventories(request, options, callback);
  }

/**
 * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource name.
 *
 *   Format: `projects/{project}/locations/{location}/instances/{instance}`
 *
 *   For `{project}`, either `project-number` or `project-id` can be
 *   provided. For `{instance}`, only hyphen or dash character is supported to
 *   list inventories across VMs.
 * @param {google.cloud.osconfig.v1alpha.InventoryView} request.view
 *   Inventory view indicating what information should be included in the
 *   inventory resource. If unspecified, the default view is BASIC.
 * @param {number} request.pageSize
 *   The maximum number of results to return.
 * @param {string} request.pageToken
 *   A pagination token returned from a previous call to
 *   `ListInventories` that indicates where this listing
 *   should continue from.
 * @param {string} request.filter
 *   If provided, this field specifies the criteria that must be met by a
 *   `Inventory` API resource to be included in the response.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing [Inventory]{@link google.cloud.osconfig.v1alpha.Inventory} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listInventoriesAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listInventoriesStream(
      request?: protos.google.cloud.osconfig.v1alpha.IListInventoriesRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listInventories.createStream(
      this.innerApiCalls.listInventories as gax.GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listInventories`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource name.
 *
 *   Format: `projects/{project}/locations/{location}/instances/{instance}`
 *
 *   For `{project}`, either `project-number` or `project-id` can be
 *   provided. For `{instance}`, only hyphen or dash character is supported to
 *   list inventories across VMs.
 * @param {google.cloud.osconfig.v1alpha.InventoryView} request.view
 *   Inventory view indicating what information should be included in the
 *   inventory resource. If unspecified, the default view is BASIC.
 * @param {number} request.pageSize
 *   The maximum number of results to return.
 * @param {string} request.pageToken
 *   A pagination token returned from a previous call to
 *   `ListInventories` that indicates where this listing
 *   should continue from.
 * @param {string} request.filter
 *   If provided, this field specifies the criteria that must be met by a
 *   `Inventory` API resource to be included in the response.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
 *   When you iterate the returned iterable, each element will be an object representing
 *   [Inventory]{@link google.cloud.osconfig.v1alpha.Inventory}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 * @example
 * const iterable = client.listInventoriesAsync(request);
 * for await (const response of iterable) {
 *   // process response
 * }
 */
  listInventoriesAsync(
      request?: protos.google.cloud.osconfig.v1alpha.IListInventoriesRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.osconfig.v1alpha.IInventory>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    options = options || {};
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listInventories.asyncIterate(
      this.innerApiCalls['listInventories'] as GaxCall,
      request as unknown as RequestType,
      callSettings
    ) as AsyncIterable<protos.google.cloud.osconfig.v1alpha.IInventory>;
  }
  listVulnerabilityReports(
      request: protos.google.cloud.osconfig.v1alpha.IListVulnerabilityReportsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.osconfig.v1alpha.IVulnerabilityReport[],
        protos.google.cloud.osconfig.v1alpha.IListVulnerabilityReportsRequest|null,
        protos.google.cloud.osconfig.v1alpha.IListVulnerabilityReportsResponse
      ]>;
  listVulnerabilityReports(
      request: protos.google.cloud.osconfig.v1alpha.IListVulnerabilityReportsRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.osconfig.v1alpha.IListVulnerabilityReportsRequest,
          protos.google.cloud.osconfig.v1alpha.IListVulnerabilityReportsResponse|null|undefined,
          protos.google.cloud.osconfig.v1alpha.IVulnerabilityReport>): void;
  listVulnerabilityReports(
      request: protos.google.cloud.osconfig.v1alpha.IListVulnerabilityReportsRequest,
      callback: PaginationCallback<
          protos.google.cloud.osconfig.v1alpha.IListVulnerabilityReportsRequest,
          protos.google.cloud.osconfig.v1alpha.IListVulnerabilityReportsResponse|null|undefined,
          protos.google.cloud.osconfig.v1alpha.IVulnerabilityReport>): void;
/**
 * List vulnerability reports for all VM instances in the specified zone.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource name.
 *
 *   Format: `projects/{project}/locations/{location}/instances/{instance}`
 *
 *   For `{project}`, either `project-number` or `project-id` can be provided.
 *   For `{instance}`, only `-` character is supported to list vulnerability
 *   reports across VMs.
 * @param {number} request.pageSize
 *   The maximum number of results to return.
 * @param {string} request.pageToken
 *   A pagination token returned from a previous call to
 *   `ListVulnerabilityReports` that indicates where this listing
 *   should continue from.
 * @param {string} request.filter
 *   If provided, this field specifies the criteria that must be met by a
 *   `vulnerabilityReport` API resource to be included in the response.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of [VulnerabilityReport]{@link google.cloud.osconfig.v1alpha.VulnerabilityReport}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listVulnerabilityReportsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listVulnerabilityReports(
      request: protos.google.cloud.osconfig.v1alpha.IListVulnerabilityReportsRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.osconfig.v1alpha.IListVulnerabilityReportsRequest,
          protos.google.cloud.osconfig.v1alpha.IListVulnerabilityReportsResponse|null|undefined,
          protos.google.cloud.osconfig.v1alpha.IVulnerabilityReport>,
      callback?: PaginationCallback<
          protos.google.cloud.osconfig.v1alpha.IListVulnerabilityReportsRequest,
          protos.google.cloud.osconfig.v1alpha.IListVulnerabilityReportsResponse|null|undefined,
          protos.google.cloud.osconfig.v1alpha.IVulnerabilityReport>):
      Promise<[
        protos.google.cloud.osconfig.v1alpha.IVulnerabilityReport[],
        protos.google.cloud.osconfig.v1alpha.IListVulnerabilityReportsRequest|null,
        protos.google.cloud.osconfig.v1alpha.IListVulnerabilityReportsResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.listVulnerabilityReports(request, options, callback);
  }

/**
 * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource name.
 *
 *   Format: `projects/{project}/locations/{location}/instances/{instance}`
 *
 *   For `{project}`, either `project-number` or `project-id` can be provided.
 *   For `{instance}`, only `-` character is supported to list vulnerability
 *   reports across VMs.
 * @param {number} request.pageSize
 *   The maximum number of results to return.
 * @param {string} request.pageToken
 *   A pagination token returned from a previous call to
 *   `ListVulnerabilityReports` that indicates where this listing
 *   should continue from.
 * @param {string} request.filter
 *   If provided, this field specifies the criteria that must be met by a
 *   `vulnerabilityReport` API resource to be included in the response.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing [VulnerabilityReport]{@link google.cloud.osconfig.v1alpha.VulnerabilityReport} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listVulnerabilityReportsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listVulnerabilityReportsStream(
      request?: protos.google.cloud.osconfig.v1alpha.IListVulnerabilityReportsRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listVulnerabilityReports.createStream(
      this.innerApiCalls.listVulnerabilityReports as gax.GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listVulnerabilityReports`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource name.
 *
 *   Format: `projects/{project}/locations/{location}/instances/{instance}`
 *
 *   For `{project}`, either `project-number` or `project-id` can be provided.
 *   For `{instance}`, only `-` character is supported to list vulnerability
 *   reports across VMs.
 * @param {number} request.pageSize
 *   The maximum number of results to return.
 * @param {string} request.pageToken
 *   A pagination token returned from a previous call to
 *   `ListVulnerabilityReports` that indicates where this listing
 *   should continue from.
 * @param {string} request.filter
 *   If provided, this field specifies the criteria that must be met by a
 *   `vulnerabilityReport` API resource to be included in the response.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
 *   When you iterate the returned iterable, each element will be an object representing
 *   [VulnerabilityReport]{@link google.cloud.osconfig.v1alpha.VulnerabilityReport}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 * @example
 * const iterable = client.listVulnerabilityReportsAsync(request);
 * for await (const response of iterable) {
 *   // process response
 * }
 */
  listVulnerabilityReportsAsync(
      request?: protos.google.cloud.osconfig.v1alpha.IListVulnerabilityReportsRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.osconfig.v1alpha.IVulnerabilityReport>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'parent': request.parent || '',
    });
    options = options || {};
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listVulnerabilityReports.asyncIterate(
      this.innerApiCalls['listVulnerabilityReports'] as GaxCall,
      request as unknown as RequestType,
      callSettings
    ) as AsyncIterable<protos.google.cloud.osconfig.v1alpha.IVulnerabilityReport>;
  }
  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified instanceOSPoliciesCompliance resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} instance
   * @returns {string} Resource name string.
   */
  instanceOSPoliciesCompliancePath(project:string,location:string,instance:string) {
    return this.pathTemplates.instanceOSPoliciesCompliancePathTemplate.render({
      project: project,
      location: location,
      instance: instance,
    });
  }

  /**
   * Parse the project from InstanceOSPoliciesCompliance resource.
   *
   * @param {string} instanceOSPoliciesComplianceName
   *   A fully-qualified path representing InstanceOSPoliciesCompliance resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromInstanceOSPoliciesComplianceName(instanceOSPoliciesComplianceName: string) {
    return this.pathTemplates.instanceOSPoliciesCompliancePathTemplate.match(instanceOSPoliciesComplianceName).project;
  }

  /**
   * Parse the location from InstanceOSPoliciesCompliance resource.
   *
   * @param {string} instanceOSPoliciesComplianceName
   *   A fully-qualified path representing InstanceOSPoliciesCompliance resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromInstanceOSPoliciesComplianceName(instanceOSPoliciesComplianceName: string) {
    return this.pathTemplates.instanceOSPoliciesCompliancePathTemplate.match(instanceOSPoliciesComplianceName).location;
  }

  /**
   * Parse the instance from InstanceOSPoliciesCompliance resource.
   *
   * @param {string} instanceOSPoliciesComplianceName
   *   A fully-qualified path representing InstanceOSPoliciesCompliance resource.
   * @returns {string} A string representing the instance.
   */
  matchInstanceFromInstanceOSPoliciesComplianceName(instanceOSPoliciesComplianceName: string) {
    return this.pathTemplates.instanceOSPoliciesCompliancePathTemplate.match(instanceOSPoliciesComplianceName).instance;
  }

  /**
   * Return a fully-qualified inventory resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} instance
   * @returns {string} Resource name string.
   */
  inventoryPath(project:string,location:string,instance:string) {
    return this.pathTemplates.inventoryPathTemplate.render({
      project: project,
      location: location,
      instance: instance,
    });
  }

  /**
   * Parse the project from Inventory resource.
   *
   * @param {string} inventoryName
   *   A fully-qualified path representing Inventory resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromInventoryName(inventoryName: string) {
    return this.pathTemplates.inventoryPathTemplate.match(inventoryName).project;
  }

  /**
   * Parse the location from Inventory resource.
   *
   * @param {string} inventoryName
   *   A fully-qualified path representing Inventory resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromInventoryName(inventoryName: string) {
    return this.pathTemplates.inventoryPathTemplate.match(inventoryName).location;
  }

  /**
   * Parse the instance from Inventory resource.
   *
   * @param {string} inventoryName
   *   A fully-qualified path representing Inventory resource.
   * @returns {string} A string representing the instance.
   */
  matchInstanceFromInventoryName(inventoryName: string) {
    return this.pathTemplates.inventoryPathTemplate.match(inventoryName).instance;
  }

  /**
   * Return a fully-qualified oSPolicyAssignment resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} os_policy_assignment
   * @returns {string} Resource name string.
   */
  oSPolicyAssignmentPath(project:string,location:string,osPolicyAssignment:string) {
    return this.pathTemplates.oSPolicyAssignmentPathTemplate.render({
      project: project,
      location: location,
      os_policy_assignment: osPolicyAssignment,
    });
  }

  /**
   * Parse the project from OSPolicyAssignment resource.
   *
   * @param {string} oSPolicyAssignmentName
   *   A fully-qualified path representing OSPolicyAssignment resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromOSPolicyAssignmentName(oSPolicyAssignmentName: string) {
    return this.pathTemplates.oSPolicyAssignmentPathTemplate.match(oSPolicyAssignmentName).project;
  }

  /**
   * Parse the location from OSPolicyAssignment resource.
   *
   * @param {string} oSPolicyAssignmentName
   *   A fully-qualified path representing OSPolicyAssignment resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromOSPolicyAssignmentName(oSPolicyAssignmentName: string) {
    return this.pathTemplates.oSPolicyAssignmentPathTemplate.match(oSPolicyAssignmentName).location;
  }

  /**
   * Parse the os_policy_assignment from OSPolicyAssignment resource.
   *
   * @param {string} oSPolicyAssignmentName
   *   A fully-qualified path representing OSPolicyAssignment resource.
   * @returns {string} A string representing the os_policy_assignment.
   */
  matchOsPolicyAssignmentFromOSPolicyAssignmentName(oSPolicyAssignmentName: string) {
    return this.pathTemplates.oSPolicyAssignmentPathTemplate.match(oSPolicyAssignmentName).os_policy_assignment;
  }

  /**
   * Return a fully-qualified vulnerabilityReport resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} instance
   * @returns {string} Resource name string.
   */
  vulnerabilityReportPath(project:string,location:string,instance:string) {
    return this.pathTemplates.vulnerabilityReportPathTemplate.render({
      project: project,
      location: location,
      instance: instance,
    });
  }

  /**
   * Parse the project from VulnerabilityReport resource.
   *
   * @param {string} vulnerabilityReportName
   *   A fully-qualified path representing VulnerabilityReport resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromVulnerabilityReportName(vulnerabilityReportName: string) {
    return this.pathTemplates.vulnerabilityReportPathTemplate.match(vulnerabilityReportName).project;
  }

  /**
   * Parse the location from VulnerabilityReport resource.
   *
   * @param {string} vulnerabilityReportName
   *   A fully-qualified path representing VulnerabilityReport resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromVulnerabilityReportName(vulnerabilityReportName: string) {
    return this.pathTemplates.vulnerabilityReportPathTemplate.match(vulnerabilityReportName).location;
  }

  /**
   * Parse the instance from VulnerabilityReport resource.
   *
   * @param {string} vulnerabilityReportName
   *   A fully-qualified path representing VulnerabilityReport resource.
   * @returns {string} A string representing the instance.
   */
  matchInstanceFromVulnerabilityReportName(vulnerabilityReportName: string) {
    return this.pathTemplates.vulnerabilityReportPathTemplate.match(vulnerabilityReportName).instance;
  }

  /**
   * Terminate the gRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   * @returns {Promise} A promise that resolves when the client is closed.
   */
  close(): Promise<void> {
    this.initialize();
    if (!this._terminated) {
      return this.osConfigZonalServiceStub!.then(stub => {
        this._terminated = true;
        stub.close();
      });
    }
    return Promise.resolve();
  }
}
